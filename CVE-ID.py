#
# pip install slackclient
# 

import json
from slack import WebClient
from io import BytesIO
from zipfile import ZipFile
from urllib.request import urlopen


class BotAlert(object):
    def __init__(self):
        self.slack = WebClient(token="<slack-X-auth-token>")
        self.group_id = "<Slack_Group_ID>"
        self.file_url = "https://nvd.nist.gov/feeds/json/cve/1.0/nvdcve-1.0-recent.json.zip"

    def send_slack(self, title, link1, text1, footer):
        attachments = [
            {
                "title": title,
                "title_link": link1,
                "text": text1,
                "footer": footer,
            }
        ]
        self.slack.chat_postMessage(channel=self.group_id, attachments=attachments)


client = BotAlert()

if __name__ == '__main__':
    file_url = "https://nvd.nist.gov/feeds/json/cve/1.0/nvdcve-1.0-recent.json.zip"
    resp = urlopen(file_url)
    zipfile = ZipFile(BytesIO(resp.read()))
    data = json.loads(zipfile.open("nvdcve-1.0-recent.json").read())
    try:
        for item in data['CVE_Items']:
            cve_id = item['cve']['CVE_data_meta']['ID']
            link = item['cve']['references']['reference_data'][0]['url']
            text = item['cve']['description']['description_data'][0]['value']
            date = item['publishedDate']
            # print("*{}*\n[{}]\n\n{}\n\n*Published Date:* _{}_".format(cve_id, link, text, date))
            client.send_slack(title=cve_id, link1=link, text1=text, footer=date)

    except Exception as e:
        print(e)
